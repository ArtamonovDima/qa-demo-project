version: '3.8'

services:
  db:
    image: postgres:15
    container_name: demo_postgres
    environment:
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: demo_pass
      POSTGRES_DB: demo_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - demo_net

  user-service:
    build: ../qa-demo-project/user-service
    container_name: user
    ports:
      - "8081:8080"
    depends_on:
      - db
    networks:
      - demo_net

  user-auth-service:
    build: ../qa-demo-project/user-auth-service
    container_name: auth
    ports:
      - "8082:8080"
    depends_on:
      - db
    networks:
      - demo_net

  frontend:
    image: nginx:alpine
    container_name: demo_frontend
    volumes:
      - ../qa-demo-project/frontend:/usr/share/nginx/html
    ports:
      - "8080:80"
    networks:
      - demo_net

  selenoid:
    container_name: selenoid
    image: aerokube/selenoid:1.11.3
#    platform: linux/amd64
    volumes:
      - ./selenoid:/etc/selenoid
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Europe/Moscow
    command: [ "-conf", "/etc/selenoid/browsers.json", "-limit", "3", "-video-output-dir", "/opt/selenoid/video", "-log-output-dir", "/opt/selenoid/logs", "-container-network", "qa-demo-project_demo_net" ]
    ports:
      - "4444:4444"
    networks:
      - demo_net

  selenoid-ui:
    container_name: selenoid-ui
    image: aerokube/selenoid-ui:1.10.11
    depends_on:
      - selenoid
    restart: unless-stopped
    ports:
      - "9091:8080"
    command: ["--selenoid-uri", "http://selenoid:4444"]
    networks:
      - demo_net

  ui-tests:
    build:
      context: ./
      dockerfile: ./user-tests/Dockerfile
    container_name: demo_ui_tests
    depends_on:
      - user-auth-service
      - user-service
      - frontend
      - selenoid
    volumes:
      - ./allure-docker-results:/qa-demo-project/user-tests/build/allure-results
#    environment:
#      - SELENOID_URL=http://selenoid:4444/wd/hub
    networks:
      - demo_net

  allure-service:
    image: frankescobar/allure-docker-service
    container_name: demo-allure-service
    depends_on:
      - ui-tests
    environment:
      - CHECK_RESULTS_EVERY_SECONDS=NONE
      - KEEP_HISTORY=1
    ports:
      - "5050:5050"
    volumes:
      - ./allure-docker-results:/app/allure-results
    networks:
      - demo_net

  allure-ui:
    image: frankescobar/allure-docker-service-ui
    container_name: demo_allure_ui
    environment:
      - ALLURE_DOCKER_PUBLIC_API_URL=http://localhost:5050
    ports:
      - "5252:5252"
    depends_on:
      - allure-service
    networks:
      - demo_net

volumes:
  postgres_data:

networks:
  demo_net:
    driver: bridge